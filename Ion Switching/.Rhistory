sin(signal)+cos(signal)+signal+cospi(signal)+sin(2*signal)#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+sin(2*signal)+cos(2*signal)+signal+cospi(signal)#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+sin(2*signal)+cos(2*signal)+signal#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+sin(2*signal)+cos(2*signal)#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
sin(2*signal)+cos(2*signal)+
sin(3*signal)+cos(3*signal)#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
sin(2*signal)+cos(2*signal)+
sin(3*signal)+cos(3*signal)+#+
sin(4*signal)+cos(5*signal)
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
sin(2*signal)+cos(2*signal)+
sinpi(signal)+cospi(signal)#+
#I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+cospi(signal)#+
#I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
sin(2*signal)+cos(2*signal)#+
#sinpi(signal)+cospi(signal)#+
#I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
#sin(2*signal)+cos(2*signal)#+
sinpi(signal)+cospi(signal)#+
#I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
sin(2*signal)+cos(2*signal)+
sinpi(signal)+cospi(signal)#+
#I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+signal+
#sin(2*signal)+cos(2*signal)+
sinpi(signal)+cospi(signal)#+
#I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+signal+
#sin(2*signal)+cos(2*signal)+
sinpi(signal)+cospi(signal)#+
I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+signal+
#sin(2*signal)+cos(2*signal)+
sinpi(signal)+cospi(signal)+
I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+signal+
#sin(2*signal)+cos(2*signal)+
sinpi(signal)+cospi(signal)+
#I(1/(1+signal^2))#+
time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
signal+
#sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)#+
#I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)#+
#I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)+
I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
sinpi(signal)+
cospi(signal)+
I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)+
I(1/(1+signal^2))+
time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)+
I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)+
exp(signal)+
exp(-signal^2)+
I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)+
#exp(signal)+
#exp(-signal^2)+
I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
accshow(lda.fit,test)
accshow(lda.fit,rbind(train,test))
accshow(lda.fit,trn)
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)+
#exp(signal)+
#exp(-signal^2)+
I(1/(1+signal^2))#+
#time_batch
,
data=trn,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
ggplot(varImp(lda.fit))
res=lda.fit %>% predict(newdata = tst)
#writing_sample
answer=read_csv(paste0(path.dir,'sample_submission.csv'))
answer$time=format(answer$time,nsmall = 4)
answer$open_channels=res
write_csv(answer,paste0(path.dir,'result_lda_wideversa.csv'))
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+# PC6+PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)+
#exp(signal)+
#exp(-signal^2)+
I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6#+PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)+
#exp(signal)+
#exp(-signal^2)+
I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
t=Sys.time()
lda.fit=train(open_channels ~ PC1 + PC2 + PC3 + PC4 + PC5+ PC6+#PC7+
sin(signal)+cos(signal)+
signal+
sin(2*signal)+cos(2*signal)+
#sinpi(signal)+
cospi(signal)+
#exp(signal)+
#exp(-signal^2)+
I(1/(1+signal^2))#+
#time_batch
,
data=train,
method="lda",
family="binomial",
trControl=control,
verbosity=T,
metric="F1")
t=Sys.time()-t
times=c(times,t)
v=f1(data.frame(obs=test$open_channels,pred=predict(lda.fit,newdata = test)))
vals=c(vals,v)
